[Unit]
Description=Domserver
After=docker.service mysql.service
Requires=docker.service mysql.service
AssertPathExists=/var/run/mysqld/mysqld.sock

[Service]
TimeoutStartSec=10min

ExecStartPre=-/usr/bin/docker kill domserver
ExecStartPre=-/usr/bin/docker rm domserver
ExecStartPre=/usr/bin/docker pull domjudge/domserver:8.2.1
ExecStartPre=/bin/sh -c "cd /sys/fs/cgroup/cpuset && mkdir -p domjudge ../memory/domjudge && chown 1000 domjudge ../memory/domjudge && for i in cpus mems; do cat cpuset.$i > domjudge/cpuset.$i; done"
ExecStartPre=/usr/bin/docker run -d \
    --name domserver \
    -p 4321:80 \
    --net bridge \
    -v /var/run/mysqld:/var/run/mysqld \
    -v /var/www/apps/domserver/submissions:/opt/domjudge/domserver/submissions \
    -v /var/www/apps/domserver/patches:/opt/domjudge/domserver/patches:ro \
    --env-file /var/www/apps/domserver/domserver-env.txt \
    --env-file /var/www/apps/domserver/mysql-password.txt \
    domjudge/domserver:8.2.1
ExecStart=/usr/bin/docker logs -f domserver
ExecStartPost=/usr/bin/docker exec domserver /opt/domjudge/domserver/patches/apply.sh

# This is really silly.
# At one point the container started without /var/run/mysqld mounted.
# According to docker-inspect, the path was mounted, but the directory
# was empty in the container.
# Fail this service if the mysqld.sock file does not exist.
ExecStartPost=/usr/bin/docker exec domserver /bin/bash -c '[ -e /var/run/mysqld/mysqld.sock ]'

ExecStartPost=/usr/bin/docker exec domserver /bin/bash -c 'while ! grep RUNNING < <(supervisorctl status php); do sleep 1; done'

# Somehow it seems like domserver 8.2.1 needs to write to this directory,
# otherwise all HTTP requests fail with:
# "Oops! An Error Occurred The server returned a "500 Internal Server Error"."
ExecStartPost=/usr/bin/docker exec domserver chmod -R g+w /opt/domjudge/domserver/webapp/var/cache/prod

ExecStop=/usr/bin/docker stop domserver
